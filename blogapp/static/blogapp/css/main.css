/*!********************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/scss/style.scss ***!
  \********************************************************************************************************************************************************/
@charset "UTF-8";
/*
 The goal of a reset stylesheet is to reduce browser inconsistencies in
 things like default line heights, margins and font sizes of headings, and so on.
 By resetting your styles, you avoid defaulting to the browser’s built-in styles, which differs from browser to browser.
*/
/* 
       1. a) Remove default margin and border.
          b) Use a more-intuitive box-sizing model.
*/
* {
  margin: 0;
  border: 0;
}

*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/* 
	2.For rem-unit it converts in decimal.
                2.4rem = 2.4 * 10px = 24px;
*/
html {
  font-size: 62.5%;
  position: relative;
}

/* 
	3.a)Fixed margin-top for navbar.	
		b)Add accessible line-height
*/
body {
  line-height: 1.5;
}

/* 
	4. Setting appropriate line-height for all <h> elements.
*/
h1,
h2,
h3,
h4 {
  line-height: 1.05;
}

/* 
	5. Setting appropriate width for <p> elements.
*/
p {
  max-width: 60ch;
}

/* 
	6. Removing default list-styles and link styles
*/
ul {
  list-style: none;
  padding: 0;
}

li {
  list-style: none;
}

a {
  text-decoration: none;
}

/* 
	7.	Improve media defaults.
*/
img {
  max-width: 100%;
  display: block;
}

/* 
	8. Inherit fonts for form controls
*/
input,
button,
textarea,
select {
  font: inherit;
}

/* 
	9. Word wrapping.
	The overflow-wrap property lets us tweak the line-wrapping algorithm, and
	give it permission to use hard wraps when no soft wrap opportunties can be found.
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  word-wrap: break-word;
}

/*  
	CSS LINK: <link rel="stylesheet" href="https://use.typekit.net/fal4wrx.css">
	font-family: flood-std,sans-serif;
	font-weight: 400;
	font-style: normal;
*/
/*
  The @forward rule loads a Sass stylesheet and makes its mixins, functions,
  and variables available when your stylesheet is loaded with the @use rule.
  It makes it possible to organize Sass libraries across many files, while allowing 
  their users to load a single entrypoint file.

  @forward "<url>"
*/
/*
  The @use rule loads mixins, functions, and variables from other Sass stylesheets,
  and combines CSS from multiple stylesheets together.
  Stylesheets loaded by @use are called "modules".
  All imported members are namespaced by default.

  @use "<url>" as <namespace>
 */
/* 
	To define width and height in one go.

	===== Usage =====
	div {
		// You can pass width && height
		@include box(200px, 300px);

		// or just pass width and the height will default to the width value 
		@include box(200px);

	}
*/
/* 
	===== FLEXBOX UTILITIES =====
*/
/* 
	===== Usage =====
	div {
		@include flex_align_items(center);
		@include flex_align_items(flex-start);
		@include flex_align_items(flex-end);
	}
*/
/* 
	===== Usage =====
	div {
		@include flex_justify_content(center);
		@include flex_justify_content(space-between);
		@include flex_justify_content(space-around);
		@include flex_justify_content(space-evenly);
	}
*/
/* 
	===== GRID_DISPLAY UTILITIES =====
*/
/*  
	============================== GRID COLUMNS ===========================

	The grid-template-columns property specifies the number (and the widths) of columns
	in a grid layout.
	The values are a space separated list, where each value specifies the size of the 
	respective column.

	repeat() tells Grid to create multiple tracks with the same size parameters
	(not necessarily the same size, though in this case they all end up being the same).
*/
/*  
	Defines a size range greater than or equal to min and less than or equal to max.

	We can use minmax() as a value for a grid column or row.

	**NOTE: The value for min has to be smaller than the value for max. Fr units can’t be 
	used for the min value, but they can absolutely be used for the max value. In fact, 
	using a 1fr as the max value will ensure that the track expands and takes up the
	available space:
				.container {
					display: grid;
					grid-template-columns: minmax(250px, 1fr) 1fr;
				}

*/
/*  
	=============== VENDOR PREFIXES ===================
*/
/*  
	=============== Cross-browser transition support ===================
*/
/*
  The @forward rule loads a Sass stylesheet and makes its mixins, functions,
  and variables available when your stylesheet is loaded with the @use rule.
  It makes it possible to organize Sass libraries across many files, while allowing 
  their users to load a single entrypoint file.

  @forward "<url>"
*/
/*
../core folder contains colors, fonts and reset_styles scss files. Only reset_styles.scss code will be globally used evrey time.

../core as c is used as a namespace for core sfiles.

../abstracts folder contains animations, functions and mixins.

../abstracts as abs is also used as a namespace for abstracts files.
 */
/*
RFS is a unit resizing engine which was initially developed to 
resize font sizes (hence its abbreviation for Responsive Font Sizes).
Nowadays RFS is capable of rescaling basically every value for any css 
property with units, like margin, padding, border-radius or even box-shadow.

Source: https://www.npmjs.com/package/rfs
 */
/* NOTE: Mid-navigation style in mobile devices is written in sidebar.scss */
.navbar {
  background-color: rgb(0, 0, 0);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  font-family: "Source Sans Pro", sans-serif;
  font-weight: 400;
  font-size: calc(1.285rem + 0.42vw);
  min-width: 100%;
  height: calc(1.765rem + 6.18vw);
}
@media (min-width: 1200px) {
  .navbar {
    font-size: 1.6rem;
  }
}
@media (min-width: 1200px) {
  .navbar {
    height: 6.4rem;
  }
}
.navbar__homelink a {
  color: rgb(213, 169, 90);
  -webkit-transition: all 0.4s ease-in;
  transition: all 0.4s ease-in;
}
.navbar__homelink a:hover {
  color: #ead3ab;
}
.navbar__mid_navigation, .navbar__login-search {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  letter-spacing: 1px;
}
@media (max-width: 768px) {
  .navbar__mid_navigation, .navbar__login-search {
    display: none;
  }
}
.navbar__mid_navigation li, .navbar__login-search li {
  margin: 0 1.6rem;
}
.navbar__mid_navigation a, .navbar__login-search a {
  color: rgb(185, 170, 135);
}
.navbar button, .navbar__mid_navigation__links a {
  text-transform: capitalize;
  font-weight: 600;
}
.navbar__mid_navigation__links--login_mobile_btn {
  display: none;
}
@media (max-width: 768px) {
  .navbar__mid_navigation__links--login_mobile_btn {
    display: block;
  }
}
.navbar__login-search__loginbtn {
  background-color: rgb(255, 255, 255);
  color: rgb(0, 0, 0);
  border-radius: 0.8rem;
  padding: 0.6rem 2rem;
  cursor: pointer;
  -webkit-transition: all 0.4s ease-in;
  transition: all 0.4s ease-in;
}
.navbar__login-search__loginbtn:hover {
  background-color: rgb(213, 169, 90);
  color: rgb(255, 255, 255);
}
.navbar__login-search__search a {
  font-size: calc(1.325rem + 0.9vw);
}
@media (min-width: 1200px) {
  .navbar__login-search__search a {
    font-size: 2rem;
  }
}
.navbar__mid_navigation__links a, .navbar__login-search__search a {
  -webkit-transition: all 0.4s ease-in;
  transition: all 0.4s ease-in;
}
.navbar__mid_navigation__links a:hover, .navbar__login-search__search a:hover {
  color: white;
}

/*
RFS is a unit resizing engine which was initially developed to 
resize font sizes (hence its abbreviation for Responsive Font Sizes).
Nowadays RFS is capable of rescaling basically every value for any css 
property with units, like margin, padding, border-radius or even box-shadow.

Source: https://www.npmjs.com/package/rfs
 */
.bottom_navbar_mobile {
  display: none;
}
@media (max-width: 768px) {
  .bottom_navbar_mobile {
    /* display: flex;justify-content: space-around; */
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    background-color: rgb(185, 170, 135);
    padding: 1rem 0;
    /*
      positioned fixed to the viewport, which means 
      it always stays in the same place even if the page is scrolled.
      The top, right, bottom, and left properties are used to
      position the element.
    */
    position: fixed;
    bottom: 0;
    /* makes sure the element is at least as wide as its container */
    min-width: 100%;
    /* add a horizontal scroll bar, when the content overflows at the
       left and right edges. */
    overflow-x: auto;
    font-family: "Source Sans Pro", sans-serif;
    font-weight: 600;
    font-size: calc(1.285rem + 0.42vw);
    /* Clickable Links */
  }
}
@media (max-width: 768px) and (min-width: 1200px) {
  .bottom_navbar_mobile {
    font-size: 1.6rem;
  }
}
@media (max-width: 768px) {
  .bottom_navbar_mobile__links {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    /* Changed the direction of viewport for vertical alignment of
       flex-items */
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    color: rgb(0, 0, 0);
    /* hover-effect */
    -webkit-transition: all 0.4s ease-in;
    transition: all 0.4s ease-in;
    /* text-links */
  }
  .bottom_navbar_mobile__links:hover {
    color: rgb(255, 255, 255);
  }
  .bottom_navbar_mobile__links__text {
    text-transform: capitalize;
  }
}

/*
RFS is a unit resizing engine which was initially developed to 
resize font sizes (hence its abbreviation for Responsive Font Sizes).
Nowadays RFS is capable of rescaling basically every value for any css 
property with units, like margin, padding, border-radius or even box-shadow.

Source: https://www.npmjs.com/package/rfs
 */
@media (max-width: 768px) {
  .navbar__mid_navigation {
    /* it always stays in the same place even if the page is scrolled */
    position: fixed;
    /* Stay at the top */
    top: 0;
    right: 0;
    /* Stay on top */
    z-index: 1;
    background-color: black;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    /* link items will have equal space around them */
    -webkit-box-pack: space-evenly;
        -ms-flex-pack: space-evenly;
            justify-content: space-evenly;
    /* 100% full-height */
    height: 100%;
    /* 0 width - change this with JavaScript */
    min-width: 20rem;
    /* adds scrollbars only when necessary */
    overflow: auto;
  }
  /* Side-menu closebtn */
  .navbar__sidemenu_closebtn {
    display: block;
    /* Stay on top of overlay sidemenu */
    z-index: 2;
    /* absolute(below) uses the document body, and moves along with page scrolling.
     Position the closebtn to the top-right corner.*/
    position: absolute;
    top: 2.5rem;
    right: 2.5rem;
    background: transparent;
    cursor: pointer;
    color: grey;
    font-size: 2.4rem;
    /*Animation and hover effects */
    -webkit-transition: all 0.4s ease-in;
    transition: all 0.4s ease-in;
  }
  .navbar__sidemenu_closebtn:hover {
    color: #b3b3b3;
  }
}
/*
  The @use rule loads mixins, functions, and variables from other Sass stylesheets,
  and combines CSS from multiple stylesheets together.
  Stylesheets loaded by @use are called "modules".
  All imported members are namespaced by default.

  @use "<url>" as <namespace>

  The @forward rule loads a Sass stylesheet and makes its mixins, functions, and 
  variables available when your stylesheet is loaded with the @use rule. It makes
  it possible to organize Sass libraries across many files, while allowing their 
  users to load a single entrypoint file.

  @forward "<url>"
 */

/*# sourceMappingURL=main.css.map*/