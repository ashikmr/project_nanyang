// Using map for storing colors.

// In Sass, the map data type represents one or more key/value pairs.
// ########## EXPLAINATION #############
// Generating a Map
// $map: (
//     key: value,
//     nextkey: nextvalue
// );

// For colorschemes, I've used nested-maps where we'll
// retrieve our color by creating a "function" and using "map-get()" function.
// Function is located in the "_functions.scss" partial.

// primary-(black, white) map color palette
$primary: (
	black: (
		base: rgba(33, 33, 33, 1),
		light: rgba(33, 33, 33, 0.87),
		lighter: rgba(33, 33, 33, 0.6),
		disabled: rgba(33, 33, 33, 0.38),
		true: rgba(0, 0, 0, 1),
	),
	white: (
		base: rgba(255, 255, 255, 1),
		light: rgba(255, 255, 255, 0.87),
		lighter: rgba(255, 255, 255, 0.6),
		disabled: rgba(255, 255, 255, 0.38),
	),
	true_black: (
		base: rgba(0, 0, 0, 1),
		light: rgba(0, 0, 0, 0.87),
		lighter: rgba(0, 0, 0, 0.6),
		disabled: rgba(0, 0, 0, 0.38),
	),
);

// secondary-black map color palette
// foreground color
$secondary: (
	black: (
		base: rgba(28, 28, 30, 1),
		light: rgba(28, 28, 30, 0.87),
		lighter: rgba(28, 28, 30, 0.6),
	),
);

// Accent-color
$colors: (
	// Yellow
	beige:
		(
			base: rgba(185, 170, 135, 1),
			dark: rgba(77, 70, 55, 1),
			light: rgba(185, 170, 135, 0.38),
			bright: rgba(213, 169, 90, 1),
		),
	// Orange
	orange:
		(
			base: rgba(222, 115, 64, 1),
		)
);
